package com.lovo.mapper;

import com.lovo.bean.EventEntity;

import java.sql.Date;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface EventEntityMapper {
	   @Select({
	        "select",
	        "pk_thing_id, f_thingNum, f_name, f_field, f_adress, fk_type, fk_level, f_reportPeople, ",
	        "f_alarmPeople, f_alarmPhone, f_occurTime, f_status, f_area, f_injured, f_houseNum, ",
	        "f_lossMoney",
	        "from t_event",
	        "where f_thingNum = #{eventid}"
	    })
	    @ResultMap("BaseResultMap")
	public EventEntity findById(String eventid);
	
	/**
	 * 根据条件展示事件 默认展示状态未处理事件 按时间排序
	 * @param page 当前是第几页
	 * @param status 事件状态
	 * @return 事件集合
	 */
    @Select({
        "select",
        "pk_thing_id, f_thingNum, f_name, f_field, f_adress, fk_type, fk_level, f_reportPeople, ",
        "f_alarmPeople, f_alarmPhone, f_occurTime, f_status, f_area, f_injured, f_houseNum, ",
        "f_lossMoney",
        "from t_event",
        "where f_status = #{status} order by f_occurTime"
    })
    @ResultMap("BaseResultMap")
		public List<EventEntity> findByMain(String status);

		/**
		 * 根据条件模糊查询 按时间排序
		 * @param page 当前页数
		 * @param eventid 事件编号
		 * @param type 类型
		 * @param openDate 开始事件
		 * @param endDate 结束时间
		 * @param status 事件状态
		 */
		public List<EventEntity> findByItem(Map<String, String> map); 
		/**
		 * 更改事件状态
		 * @param eventId 事件编号
		 * @param status 状态
		 */
	    @Update({
	        "update t_event",
	        "set f_status = #{param2} ",
	        "where f_thingNum = #{param1}"
	    })
		public void updateEvent(String eventId,String status);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_event
     *
     * @mbggenerated
     */
    @Delete({
        "delete from t_event",
        "where pk_thing_id = #{pkThingId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer pkThingId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_event
     *
     * @mbggenerated
     */
    @Insert({
        "insert into t_event ( f_thingNum, ",
        "f_name, f_field, f_adress, ",
        "fk_type, fk_level, ",
        "f_reportPeople, f_alarmPeople, ",
        "f_alarmPhone, f_occurTime, ",
        "f_status, f_area, f_injured, ",
        "f_houseNum, f_lossMoney)",
        "values ( #{fThingnum,jdbcType=VARCHAR}, ",
        "#{fName,jdbcType=VARCHAR}, #{fField,jdbcType=VARCHAR}, #{fAdress,jdbcType=VARCHAR}, ",
        "#{fkType,jdbcType=INTEGER}, #{fkLevel,jdbcType=INTEGER}, ",
        "#{fReportpeople,jdbcType=VARCHAR}, #{fAlarmpeople,jdbcType=VARCHAR}, ",
        "#{fAlarmphone,jdbcType=VARCHAR}, #{fOccurtime,jdbcType=VARCHAR}, ",
        "#{fStatus,jdbcType=VARCHAR}, #{fArea,jdbcType=REAL}, #{fInjured,jdbcType=INTEGER}, ",
        "#{fHousenum,jdbcType=INTEGER}, #{fLossmoney,jdbcType=REAL})"
    })
    int insert(EventEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_event
     *
     * @mbggenerated
     */
    int insertSelective(EventEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_event
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "pk_thing_id, f_thingNum, f_name, f_field, f_adress, fk_type, fk_level, f_reportPeople, ",
        "f_alarmPeople, f_alarmPhone, f_occurTime, f_status, f_area, f_injured, f_houseNum, ",
        "f_lossMoney",
        "from t_event",
        "where pk_thing_id = #{pkThingId,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    EventEntity selectByPrimaryKey(Integer pkThingId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_event
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(EventEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_event
     *
     * @mbggenerated
     */
    @Update({
        "update t_event",
        "set f_thingNum = #{fThingnum,jdbcType=VARCHAR},",
          "f_name = #{fName,jdbcType=VARCHAR},",
          "f_field = #{fField,jdbcType=VARCHAR},",
          "f_adress = #{fAdress,jdbcType=VARCHAR},",
          "fk_type = #{fkType,jdbcType=INTEGER},",
          "fk_level = #{fkLevel,jdbcType=INTEGER},",
          "f_reportPeople = #{fReportpeople,jdbcType=VARCHAR},",
          "f_alarmPeople = #{fAlarmpeople,jdbcType=VARCHAR},",
          "f_alarmPhone = #{fAlarmphone,jdbcType=VARCHAR},",
          "f_occurTime = #{fOccurtime,jdbcType=VARCHAR},",
          "f_status = #{fStatus,jdbcType=VARCHAR},",
          "f_area = #{fArea,jdbcType=REAL},",
          "f_injured = #{fInjured,jdbcType=INTEGER},",
          "f_houseNum = #{fHousenum,jdbcType=INTEGER},",
          "f_lossMoney = #{fLossmoney,jdbcType=REAL}",
        "where pk_thing_id = #{pkThingId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(EventEntity record);
}